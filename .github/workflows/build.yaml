name: Commit Stage

on:
  push:
    branches: [main]
  workflow_dispatch:
    branches: [main]

env:
  VERSION: latest
  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ env.VERSION }}-${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Permission to check out current Git repo
      security-events: write # Permission to submit security events to GitHub

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle and run unit tests and int tests
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image based on Dockerfile
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \ 
            --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --load . 

      - name: Code vulnerability scanning
        uses: anchore/scan-action@v6
        id: scan # Assign identifier for curr step so that it can be referenced
        with:
          path: "${{ github.workspace }}" # Path to checked out repo
          fail-build: true # Fail if found vulnerabilities
          severity-cutoff: 'high'

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Tag and push image to Amazon ECR
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.VERSION }}
          
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY